---
title: "CT R User Group October Demonstration"
author: "Chuck Powell"
date: today
date-format: "long"
description: "Using Quarto within RStudio"
format:
  html:
    title-block-banner: "#3171e7"
    toc: true
    embed-resources: true
    link-external-newwindow: true
    toc-location: left
    other-links:
      - text: Quarto User Guide
        href: https://quarto.org/docs/guide/
      - text: Quarto Command Line Interface
        href: https://quarto.org/docs/get-started/
      - text: RStudio User Guide
        href: https://docs.posit.co/ide/user/ide/get-started/#hello-rstudio
      - text: CRAN
        href: https://cloud.r-project.org/
      - text: RStudio (via the *POSIT* website)
        href: https://posit.co/download/rstudio-desktop/
      - text: pak R package manager
        href: https://pak.r-lib.org/
      - text: The Tidyverse Homepage
        href: https://www.tidyverse.org/
css: styles.css
editor: source

---

## Quarto

Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see <https://quarto.org>.  If you are familiar with RMarkdown documents in
earlier versions of R and RStudio you can think of Quarto as the "next generation" tool.

Most "modern" versions of RStudio come with a basic functioning version of Quarto installed.
But to get all the lastest features and functionality I recommend you install the 
"Quarto Command Line Interface" see the hyperlink in the sidebar.

### Why you might want to use Quarto?

You have data, and you have tools like `R` to analyze it but you want to communicate or
"publish" your results and findings in a reproducible, professional manner in a variety
of common formats (HTML, PDF, Word, etc.) to share with others.

### How difficult is Quarto to learn?

I like to describe it as simple to learn (the basics), after all it's built-in and
comes with starter templates that make it easy to get started.  But it can be complex
and take some time to "master" if you're insistent on complex formatting.



## Running Code

When you click the **Render** button a document will be generated that includes both content and the output of embedded code. You can embed code like this:

```{r}
1 + 1
```

You can add options to executable code like this 

```{r}
#| echo: false
2 * 2
```

The `echo: false` option disables the printing of code (only output is displayed).
